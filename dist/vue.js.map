{"version":3,"file":"vue.js","sources":["../src/observe/dep.js","../src/observe/watcher.js","../src/initComputed.js","../src/initMethods.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/compiler/parse.js","../src/compiler/index.js","../src/vdom/index.js","../src/lifecycle.js","../src/utils.js","../src/init.js","../src/initGlobalAPI.js","../src/index.js"],"sourcesContent":["let id = 0;\r\n\r\nexport class Dep {\r\n  constructor() {\r\n    this.id = id++;\r\n    this.subs = []; //存放 当前属性对应的watcher有哪些\r\n  }\r\n  add() {\r\n    //this.subs.push(Dep.target)    这么写不能去重  对于重复的watcher  不需要收集\r\n    Dep.target.addDep(this); //先让watcher记住  该dep  再在watcher中  将watcher加入到dep中\r\n  }\r\n  //将watcher收集到dep中\r\n  addSub(watcher) {\r\n    this.subs.push(watcher);\r\n  }\r\n  notify() {\r\n    this.subs.forEach((watcher) => watcher.update());\r\n  }\r\n}\r\n\r\nDep.target = null;\r\nlet globalWatcher = []   //维护全局watcher栈 \r\n//渲染的时候  渲染watcher第一个进栈  最后一个出栈\r\nexport function pushWatcher(watcher){\r\n  globalWatcher.push(watcher)\r\n  Dep.target = watcher\r\n}\r\n\r\nexport function popWatcher(){\r\n  globalWatcher.pop()\r\n  Dep.target = globalWatcher[globalWatcher.length-1]\r\n}\r\n\r\n\r\n","import  { Dep, popWatcher, pushWatcher } from \"./dep\"\r\n\r\nlet id = 0\r\n\r\n\r\n//每个组件都会单独创建一个watcher\r\n//创建渲染watcher的时候  将watcher实例放到一个全局变量上\r\nexport class Watcher{\r\n    constructor(vm,exectuor,options,cb){\r\n        this.id = id++   //每一个watcher唯一的ID  \r\n        if(typeof exectuor == \"string\"){\r\n            this.getter = function (){\r\n                return vm[exectuor]   //如果是字符串 就变为函数  \r\n            }\r\n        }else{\r\n            this.getter = exectuor    \r\n        }\r\n \r\n        this.vm = vm\r\n        this.cb = cb  //$watch中传入的回调函数\r\n        this.renderWatcher = options  //判断是否为渲染watcher 即new的时候会不会调用exectuor\r\n        this.deps = []   //每一个watcher收集dep\r\n        this.depsId = new Set()  //利用集合去重  让dep中不收集重复的watcher\r\n        this.options = options\r\n        this.user = options.user?options.user:undefined   //判断user   是否为watch中的属性\r\n        this.lazy = this.options.lazy\r\n        this.dirty = this.options.lazy\r\n        this.value = this.dirty?undefined:this.get()  \r\n         //如果是lazy的话 表明是计算属性的watcher 先创建 不访问数据\r\n         //如果是用户自己的watcher   第一次调用 返回的就是老值   同时将watcher收集到该属性的dep中\r\n    }\r\n    evaluate(){\r\n        this.value = this.get()\r\n        this.dirty = false\r\n    }\r\n    depend(){\r\n        let i = this.deps.length\r\n        while(i--){\r\n            this.deps[i].add()   //[name_dep,age_dep]  让这些属性的dep收集外层渲染watcher\r\n        }\r\n    }\r\n    get(){   //会去vm上取值    渲染的时候  \r\n        pushWatcher(this)\r\n        let value = this.getter.call(this.vm)\r\n        popWatcher()\r\n        return value\r\n    }  //收集dep 并去重   并且让dep收集watcher  你中有我 我中有你  \r\n    addDep(dep){\r\n        let id = dep.id\r\n        if(!this.depsId.has(id)){\r\n            this.deps.push(dep)\r\n            this.depsId.add(id)\r\n            dep.addSub(this)\r\n        }\r\n    }\r\n    update(){\r\n        if(this.lazy){      //如果是lazy属性 表明是计算属性的watcher    更新的时候 要将dirty值改完true\r\n            this.dirty = true        //即代表计算属性的值发生的改变  下一次访问 就可以调用evaluate方法更新值\r\n        }else{\r\n            queueWatcher(this)   //将所有的需要更新的watcher加入到一个队列中\r\n        }\r\n        //this.get()这是立即更新   需要优化 \r\n    }\r\n    run(){\r\n        let oldValue = this.value   //老值  \r\n        let newValue = this.get()\r\n        if(this.user){   //如果是用户自己的watcher\r\n            this.cb.call(this.vm,oldValue,newValue)\r\n        }\r\n        //this.get()  //真正调用回调函数\r\n    }\r\n}\r\n\r\nlet queue = []\r\nlet pending = false\r\nlet has = new Set()\r\n//一个队列 用来维护需要更新的watcher\r\nfunction queueWatcher(watcher){\r\n    let id = watcher.id\r\n    if(!has.has(id)){\r\n        queue.push(watcher)\r\n        has.add(id)\r\n        if(!pending){\r\n            nextTick(flushScheduleQueue)\r\n            pending = true\r\n        }\r\n    }\r\n}\r\n//将队列中的watcher都进行刷新并清空\r\nfunction flushScheduleQueue(){\r\n    let flushqueue = queue.slice(0)\r\n    queue = []\r\n    pending = false\r\n    has.clear()   //将has清空 \r\n    flushqueue.forEach(watcher => watcher.run())\r\n}\r\n\r\n\r\n\r\n//一个队列 用过来维护nextTick中的任务\r\nlet callbacks = []\r\nlet waiting = false\r\nexport function nextTick(exectuor){\r\n    callbacks.push(exectuor)\r\n    if(!waiting){\r\n        Promise.resolve().then(flushCallBacks);   //直接用promise微任务     降级 用mutationObserve   \r\n        waiting = true   //最后用setTimeout setMediate \r\n    }\r\n}\r\n\r\nfunction flushCallBacks(){\r\n    let calls = callbacks.slice(0)\r\n    callbacks = []\r\n    waiting = false\r\n    calls.forEach(exectuor =>exectuor())\r\n}","//初始化computed属性  \r\n//实现的computed的响应式\r\n\r\nimport { Dep } from \"./observe/dep\"\r\nimport { Watcher } from \"./observe/watcher\"\r\n\r\nexport function initComputed(vm){   //初始化computed  \r\n    let computed = vm.$options.computed    \r\n    let watchers = vm._computedWatchers = {}   //将计算属性的watcher保存到当前实例上\r\n    for(let key in computed){\r\n        let userDef = computed[key]\r\n        const getter = typeof userDef == \"function\"? userDef :userDef.get\r\n        watchers[key] = new Watcher(vm,getter,{lazy:true})   //computed的每个属性都创建一个watcher\r\n        defineComputed(vm,key,userDef)   //将computed的每个属性都定义到当前实例上  \r\n    }\r\n}\r\n\r\n\r\nfunction defineComputed(vm,key,userDef){\r\n    const setter = userDef.set || (() =>{})\r\n    Object.defineProperty(vm,key,{    //将每个key都定义到当前实例上  \r\n        get:createComputedValue(key),   //重写 get方法    实现缓存以及响应式更新\r\n        set:setter\r\n    })\r\n}\r\n\r\n\r\nfunction createComputedValue(key){\r\n \r\n    return function(){\r\n        const watcher = this._computedWatchers[key]     //利用watcher将结果缓存来了 结果为watcher.value\r\n        if(watcher.dirty){   // watcher调用回调函数后 将dirty值改为false  \r\n            watcher.evaluate()   //   watcher中 调用回调函数 获得结果  保存在watcher.value中  将dirty改完false\r\n        }                         \r\n        if(Dep.target){   //如果还有渲染watcher  要将该渲染watcher加入到计算属性的依赖属性的依赖中  \r\n            watcher.depend()   //->wathcer.deps[name_dep,age_dep] 等  让他们收集当前的dep.target watcher\r\n        }\r\n        return watcher.value   //返回的就是缓存的结果 \r\n    }\r\n}","\r\n//初始化methods\r\nexport function initMethods(vm){\r\n    const methods = vm.$options.methods\r\n    for(let key in methods){\r\n        createMethod(vm,key,methods[key])\r\n        console.log(key)\r\n    }\r\n}\r\n\r\n\r\nfunction createMethod(vm,key,value){\r\n    Object.defineProperty(vm,key,{\r\n        get(){\r\n            return value.bind(vm)\r\n        }\r\n    })\r\n}","let oldArrayProto = Array.prototype\r\n\r\nexport let newArrayProto = Object.create(oldArrayProto)\r\n\r\nlet methods = [\r\n    \"push\",\r\n    \"pop\",\r\n    \"shift\",\r\n    \"unshift\",\r\n    \"reverse\",\r\n    \"sort\",\r\n    \"splice\"\r\n]\r\n\r\nmethods.forEach(method =>{\r\n    newArrayProto[method] = function(...args){\r\n        const result = oldArrayProto[method].call(this,...args)\r\n\r\n        let inserted  \r\n        let ob = this.__ob__\r\n\r\n        switch(method){\r\n            case \"push\":\r\n            case \"unshift\":\r\n                inserted = args\r\n                break\r\n            case \"splice\":\r\n                inserted = args.slice(2)\r\n            default:\r\n                break\r\n        }\r\n    \r\n\r\n        if(inserted){\r\n            ob.observeArray(inserted)\r\n        }\r\n        ob.dep.notify()\r\n        return result\r\n    }\r\n})","import { newArrayProto } from \"./array\";\r\nimport { Dep }from \"./dep\";\r\n\r\nclass Observe {\r\n  constructor(data) {\r\n    // 将this 绑定为data的一个变量   方便 data对自己添加的数据进行观测 以及\r\n    //通过这个属性 判断data是否已经被观测过\r\n    //不能直接赋值 data.__ob__=this  会造成死循环\r\n    this.dep = new Dep()   //给每一个数据对象都建立一个依赖收集者\r\n\r\n    Object.defineProperty(data, \"__ob__\", {\r\n      //不可枚举   在对对象观测时  不会对这个属性观测\r\n      value: this,\r\n      enumerable: false,\r\n    });\r\n\r\n    if (Array.isArray(data)) {\r\n      //修改数组本身重写7个方法  还要将数组中的引用数据类型 进行劫持\r\n\r\n      data.__proto__ = newArrayProto;\r\n\r\n      this.observeArray(data); //如果数组中存放的对象 可以劫持到\r\n    } else {\r\n      this.walk(data);\r\n    }\r\n  }\r\n  walk(data) {\r\n    //循环对象  对属性依次进行劫持\r\n\r\n    //\"重新定义属性\"\r\n    Object.keys(data).forEach((k) => defineReactive(data, k, data[k]));\r\n  }\r\n  observeArray(data) {\r\n    data.forEach((i) => observe(i));\r\n  }\r\n}\r\n\r\nfunction arrayDep(v){\r\n  for(let i =0; i < v.length;i++){\r\n    let current = v[i]\r\n    current.__ob__  && current.__ob__.dep.add()\r\n    if(Array.isArray(current)){\r\n      arrayDep(current)\r\n    }\r\n  }\r\n}\r\n\r\nexport function defineReactive(data, k, v) {\r\n  \r\n  //闭包   属性劫持  依赖闭包\r\n  let childOb = observe(v); //判断v是否是对象\r\n  let dep = new Dep();\r\n  Object.defineProperty(data, k, {\r\n    get() {\r\n      if (Dep.target) {\r\n        //渲染的时候 从vm取值  就会把watcher加入到dep中\r\n        dep.add();\r\n        if(childOb && childOb.dep){  //需要判断childOb是不是为空 \r\n          childOb.dep.add()    //如果是数组 或者对象 手机依赖 \r\n          if(Array.isArray(v)){   //如果是数组嵌套数组\r\n            arrayDep(v)   //继续监听 \r\n          }\r\n        }\r\n      }\r\n      return v;\r\n    },\r\n    set(newValue) {\r\n      if (newValue == v) return;\r\n      v = newValue;\r\n      observe(v);\r\n      dep.notify();\r\n    },\r\n  });\r\n}\r\n\r\n//对对象进行劫持\r\nexport function observe(data) {\r\n  //对对象进行劫持\r\n  if (typeof data !== \"object\" || data == null) {\r\n    return; //只对对象劫持\r\n  }\r\n  //如果对象被劫持过了， 就不需要再被劫持了   通过data上的__ob__判断 是否已经被观测过\r\n  if (data.__ob__ instanceof Observe) {\r\n    return data.__ob__;\r\n  }\r\n\r\n  return new Observe(data);      //对对象进行劫持 \r\n}\r\n","import { initComputed } from \"./initComputed\";\r\nimport { initMethods } from \"./initMethods\";\r\nimport { observe } from \"./observe/index\";\r\nimport { nextTick, Watcher } from \"./observe/watcher\";\r\n\r\nexport function initState(vm) {\r\n  //初始化\r\n  const opts = vm.$options;\r\n  // if(opts.props){\r\n  //     initProps()\r\n  // }\r\n  if (opts.data) {\r\n    initData(vm); //初始化data属性\r\n  }\r\n  if (opts.computed) {\r\n    //初始化computed属性\r\n    initComputed(vm);\r\n  }\r\n  if (opts.watch) {\r\n    initWatch(vm);\r\n  }\r\n  if(opts.methods){\r\n    console.log(\"初始化methods\")\r\n    initMethods(vm)\r\n  }\r\n}\r\n\r\n//初始化watch\r\n/*\r\n    watch:{\r\n        good(newValue,oldValue){\r\n            xxxx\r\n        }\r\n    }\r\n*/\r\nfunction initWatch(vm) {  //处理watch\r\n  let watch = vm.$options.watch;\r\n  for (let key in watch) {\r\n    const handler = watch[key]; //这里的handler可能是数组  字符串  函数 对象\r\n\r\n    if (Array.isArray(handler)) {\r\n      //如果是数组的话  循环操作 将数组中的每个值都创建watcher\r\n      for (let i = 0; i < handler.length; i++) {\r\n        createWatcher(vm, key, handler[i]);\r\n      }\r\n    } else {\r\n      createWatcher(vm, key, handler); //不是数组 直接创建watcher\r\n    }\r\n  }\r\n}\r\n\r\nfunction createWatcher(vm, key, handler) {\r\n  if (typeof handler == \"string\") {\r\n    //如果handler为字符串  就去methods中调用对应方法\r\n    hanlder = vm[handler]; //methods中的方法都绑定在实例上\r\n  }\r\n  if (handler.handler) {\r\n    //如实handler是一个对象 中间包含了handler方法\r\n    handler = handler[\"handler\"];\r\n  }\r\n\r\n  return vm.$watch(key, handler);\r\n}\r\n\r\n//初始化data\r\nfunction initData(vm) {\r\n  //判断 data是函数  还是 对象\r\n  let data = vm.$options.data;\r\n  data = typeof data == \"function\" ? data.call(vm) : data;\r\n\r\n  vm._data = data; //将data挂载到vm实例上  但是访问属性 变成vm._data.xxx\r\n  //对数据进行劫持\r\n  observe(data);\r\n\r\n  for (let k in data) {\r\n    proxy(vm, \"_data\", k);\r\n  }\r\n}\r\n\r\nfunction proxy(vm, data, k) {\r\n  Object.defineProperty(vm, k, {\r\n    get() {\r\n      return vm[data][k];\r\n    },\r\n    set(newValue) {\r\n      vm[data][k] = newValue;\r\n    },\r\n  });\r\n}\r\n\r\nexport function initStateMixin(Vue) {\r\n  Vue.prototype.$nextTick = nextTick;\r\n\r\n  Vue.prototype.$watch = function (expreOrFn, handler) {\r\n    //express针对调用的this.$watch\r\n    new Watcher(this, expreOrFn, { user: true }, handler); //$watch功能简单  就是创造了一个watcher\r\n  };\r\n}\r\n","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); //匹配到的是一个标签名\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); //匹配到的是结束的标签名\r\nconst attribute =\r\n  /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; //匹配属性\r\nconst startTagClose = /^\\s*(\\/?)>/;\r\n\r\n\r\n//从template中解析标签  解析一段就删一段\r\n//parseHTML生成一棵AST  对html一段一段解析 删除  利用正则匹配\r\n//生成一棵AST树   利用栈维护     =>字符串拼接 很恶心  返回一棵树\r\nexport function parseHTML(html) {\r\n  const ELEMENT_TYPE = 1;\r\n  const TEXT_TYPE = 3;\r\n  const stack = []; //用于存放元素\r\n  let currentParent; //指针  指向栈中的最后一个\r\n  let root\r\n\r\n  function creatASTElement(tag, attrs) {\r\n    return {\r\n      tag,\r\n      type: ELEMENT_TYPE,\r\n      children: [],\r\n      attrs,\r\n      parent: null,\r\n    };\r\n  }\r\n\r\n  function start(tag, attrs) {\r\n    let node = creatASTElement(tag,attrs)  //得到节点\r\n    if(!root){   //判断是否为根节点\r\n      root = node\r\n    }\r\n    if(currentParent){\r\n      node.parent = currentParent   //设置当前节点的父节点\r\n      currentParent.children.push(node)\r\n    }\r\n    stack.push(node)   //将节点存入栈中\r\n    currentParent = node   //将父节点指向栈中最后一个节点\r\n    \r\n  }\r\n  function chars(text) {\r\n    text = text.replace(/\\s/g,\"\")\r\n    text && currentParent.children.push({\r\n      type:TEXT_TYPE,\r\n      text,\r\n      parent:currentParent\r\n    })\r\n\r\n  }\r\n  function end(tag) {\r\n    stack.pop()//弹出最后一个  \r\n    currentParent = stack[stack.length-1]\r\n  }\r\n\r\n  function parseStart() {\r\n    //处理开始标签\r\n    const start = html.match(startTagOpen); //匹配开始标签\r\n    if (start) {\r\n      const match = {\r\n        //构建一个对象\r\n        tag: start[1],\r\n        attrs: [],\r\n      };\r\n\r\n      advance(start[0].length); //匹配到开始标签后 一直匹配下去  直到开始标签的结束\r\n\r\n      let attr, end;\r\n      while (\r\n        //不是结束标签  将属性一直匹配来 并且将属性\r\n        !(end = html.match(startTagClose)) &&\r\n        (attr = html.match(attribute))\r\n      ) {\r\n        //一直匹配下去\r\n\r\n        advance(attr[0].length); //继续删除匹配到的属性\r\n        match.attrs.push({\r\n          name: attr[1],\r\n          value: attr[3] || attr[4] || attr[5] || true,\r\n        }); //将匹配到的attr加入\r\n      }\r\n      if (end) {\r\n        //如果匹配到了开始标签的结束标签  就删掉\r\n        advance(end[0].length);\r\n      }\r\n      return match;\r\n    }\r\n    return false; //不是开始标签\r\n  }\r\n\r\n  function advance(n) {\r\n    //前进n个位置  即删除一段html\r\n    html = html.substring(n);\r\n  }\r\n\r\n  while (html) {\r\n    let text_end = html.indexOf(\"<\"); //匹配<开始\r\n    if (text_end == 0) {\r\n      //若为0  表示为标签的开始\r\n      const startTagMatch = parseStart(); //开始标签的匹配结果\r\n      if (startTagMatch) {\r\n        //如果匹配到的仍是开始标签\r\n        start(startTagMatch.tag, startTagMatch.attrs);\r\n        continue;\r\n      }\r\n      let endTagMatch = html.match(endTag);\r\n      if (endTagMatch) {\r\n        advance(endTagMatch[0].length);\r\n        end(endTagMatch[1]);\r\n        continue;\r\n      }\r\n    }\r\n    if (text_end > 0) {\r\n      //若大于0 则表示为文本\r\n      let text = html.substring(0, text_end);\r\n      if (text.length > 0) {\r\n        advance(text.length); //将文本删除即可\r\n        chars(text);\r\n      }\r\n    }\r\n  }\r\n  return root\r\n}","import { parseHTML } from \"./parse\";\r\n/*\r\n * <div>\r\n        <div></div>\r\n        <span></span>\r\n    </div>\r\n * \r\n */\r\nfunction genProps(attrs){\r\n  let str = ''\r\n  for(let i = 0; i<attrs.length;i++){\r\n    let attr = attrs[i]\r\n    if(attr.name === \"style\"){\r\n      let obj = {}\r\n      attr.value.split(\";\").forEach(item=>{\r\n        let [key,value] = item.split(\":\")\r\n        obj[key] = value\r\n      })\r\n      attr.value = obj\r\n    }\r\n    str +=`${attr.name}:${JSON.stringify(attr.value)},`\r\n  }\r\n  return `{${str.slice(0,-1)}}`\r\n}\r\n\r\nconst defaultTagRE =/\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g  //匹配{{}}中间的表达式  一定要去掉修饰符g\r\nfunction gen(node){\r\n  if(node.type == 1){   //如果是元素节点  直接调用codegen\r\n    return codegen(node)\r\n  }else{   //如果是文本节点\r\n    defaultTagRE.lastIndex = 0   //将正则匹配的开始位置置0\r\n    if(!defaultTagRE.test(node.text)){\r\n      return `_v(${JSON.stringify(node.text)})`\r\n    }else{\r\n      defaultTagRE.lastIndex = 0  //将正则的lastindenx 置为0\r\n      let text = node.text  //拿到文本内容 \r\n      let res       //定义匹配的结果\r\n      let startindex,endindex\r\n      startindex = 0\r\n      let result = []   //用数组维护 获得的结果   _s(name)+_v(text)+_(age)\r\n      while(res = defaultTagRE.exec(text)){   //通过正则匹配{{}}中间的内容\r\n        endindex = res.index\r\n        if(endindex > startindex){\r\n          result.push(`\"${text.slice(startindex,endindex)}\"`)\r\n        }\r\n        result.push(`_s(${res[1]})`)\r\n        startindex = endindex+res[0].length\r\n      }\r\n      if(startindex < text.length){   //判断是否还有文本内容  \r\n        result.push(`\"${text.slice(startindex,text.length)}\"`)\r\n      }\r\n      return `_v(${result.join(\"+\")})`  //返回格式  _v(_s(name)+\"xx\"+_s(age))\r\n    }\r\n  }\r\n}\r\n\r\nfunction genChildren(children){\r\n  if(children){\r\n    return children.map(child=>gen(child)).join(',')\r\n  }\r\n}\r\nfunction codegen(ast){\r\n  let children = genChildren(ast.children)\r\n\r\n  let code = `_c(\"${ast.tag}\",    \r\n  ${ast.attrs.length>0?genProps(ast.attrs):'null'}   \r\n  ${ast.children.length>0?`,${children}`:\"\"}    \r\n  )`\r\n  return code\r\n}\r\n\r\n\r\nexport function compileToFunction(template) {\r\n  //1.第一步 生成AST语法树\r\n  //2.第二步  将抽象语法树转换为render函数   render函数返回的结果就是虚拟DOM\r\n\r\n  let ast = parseHTML(template); //生成AST语法树\r\n  let code = `with(this){return ${codegen(ast)}}`   //render函数的实现   \r\n  const render = new Function(code)    //模板引擎的原理     利用with 和 new Function \r\n  return render\r\n}\r\n","\r\n//h()  _c()\r\n\r\n// //判断是原始标签 还是组件 可以从vm.$options.components[tag]  判断 应该也可以\r\n// const isOriginalTag = (tag)=>{\r\n//     return ['div','p','span','button','ul','li'].includes(tag)\r\n// }\r\nexport function createElementVNode(vm,tag,data,...children){\r\n    if(data == null){\r\n        data={}\r\n    }\r\n    let key = data.key\r\n    if(key){\r\n        delete data.key\r\n    }\r\n    if(tag == 'component'){   //实现component功能  \r\n        let component = data['is']\r\n        let Ctor = vm.$options.components[component]\r\n        return createComponentVnode(vm,tag,key,data,children,Ctor)\r\n    }\r\n    if(vm.$options.components[tag]){  //如果components中有值  则为组件 否则为原始标签\r\n\r\n        //Ctor可能为构造函数 也有可能为对象  \r\n        let Ctor = vm.$options.components[tag]\r\n        return createComponentVnode(vm,tag,key,data,children,Ctor)\r\n    }else{\r\n        return vnode(vm,tag,key,data,children)\r\n    }\r\n    \r\n}\r\n\r\n//创建组件虚拟节点\r\nfunction createComponentVnode(vm,tag,key,data,children,Ctor){\r\n    if(typeof Ctor == \"object\"){\r\n        Ctor = vm.$options._base.extend(Ctor)\r\n    }\r\n    data.hook = {\r\n        init(vnode){\r\n            //获取组件实例 \r\n            let instance = vnode.componentInstance = new vnode.componentOptions.Ctor\r\n            instance.$mount()   //挂载组件实例  获取组件的$el\r\n        }\r\n    }\r\n    return vnode(vm,tag,key,data,children,null,{Ctor})\r\n}\r\n\r\n\r\n//_v()\r\nexport function createTextVNode(vm,text){\r\n    return vnode(vm,undefined,undefined,undefined,undefined,text,null)\r\n}\r\n\r\nfunction vnode(vm,tag,key,data,children,text,componentOptions){\r\n    return {\r\n        vm,\r\n        tag,\r\n        key,\r\n        data,\r\n        children,\r\n        text,\r\n        componentOptions\r\n    }\r\n}","import { createElementVNode, createTextVNode } from \"./vdom/index\";\r\nimport { Watcher } from \"./observe/watcher\";\r\n\r\n//实现了mountComponet方法  将组件挂载到真是DOM上\r\nexport function mountComponent(vm, el) {\r\n  vm.$el = el; //将el 挂载到实例的$el上\r\n\r\n  //1.调用render方法产生虚拟节点   调用update方法  获取新DOM  并将原DOM替换掉\r\n  const updateComponent = () => {\r\n    vm._update(vm._render()); //更新试图的核心方法\r\n  };\r\n  const watcher = new Watcher(vm, updateComponent, { lazy: false });\r\n  //2.根据虚拟DOM  产生真是DOM\r\n  //3.插入到el中\r\n}\r\n\r\nfunction patchProps(el, oldProps = {}, newProps = {}) {\r\n  //传入参数 为真是DOM,老的虚拟节点上的属性，新的虚拟节点上的属性\r\n  //老的属性中有，新的属性中没有\r\n  let oldStyles = oldProps.style ? oldProps.style : {}; //老的虚拟节点中的style\r\n  let newStyles = newProps.style ? newProps.style : {}; //新的虚拟节点中的style\r\n\r\n  for (let key in oldStyles) {\r\n    if (newStyles[key]) {\r\n      //如果老的有 某种样式 新的没有  清空\r\n      el.style[key] = \"\";\r\n    }\r\n  }\r\n\r\n  for (let key in oldProps) {\r\n    //  如果老的有某种属性 新的没有 清空\r\n    if (!newProps[key]) {\r\n      el.removeAttribute(key);\r\n    }\r\n  }\r\n\r\n  for (let k in newProps) {  //\r\n    if (k == \"style\") {\r\n      for (let stylename in newProps.style) {\r\n        el.style[stylename] = newProps.style[stylename];\r\n      }\r\n    } else {\r\n        el.setAttribute(k, newProps[k]);\r\n      \r\n    }\r\n  }\r\n}\r\n\r\nfunction createComponent(vnode){\r\n  let i = vnode.data\r\n  if( (i= i.hook) && (i = i.init)){\r\n    i(vnode)\r\n    return true\r\n  }else{\r\n    return false\r\n  }\r\n}\r\n\r\nexport function createElm(vnode) {\r\n  let { tag, data, children, text } = vnode;\r\n  if (typeof tag == \"string\") {\r\n\r\n    if(createComponent(vnode)){   //如果是组件节点 \r\n      \r\n      return vnode.componentInstance.$el   //返回组件节点的真是DOM元素\r\n    }\r\n\r\n    vnode.el = document.createElement(tag); //利用标签创建元素   将元素放到虚拟节点的el上\r\n\r\n    patchProps(vnode.el, {}, data);\r\n    children.forEach((child) => {\r\n      vnode.el.appendChild(createElm(child)); //将子节点变为元素的子节点\r\n    });\r\n  } else {\r\n    vnode.el = document.createTextNode(text);\r\n  }\r\n  return vnode.el; //返回创建的真实节点\r\n}\r\n\r\n\r\n//patch函数实现\r\nexport function patch(oldVNode, newVNode) {\r\n  //这里传入进来的oldVNode为app dom  进行的是初始渲染\r\n\r\n  if(!oldVNode){     //若为组件节点      \r\n    return createElm(newVNode)   //创建组件节点的真实DOM并返回\r\n  }\r\n\r\n  let isRealEle = oldVNode.nodeType;\r\n  if (isRealEle) {\r\n    //如果是初始渲染  就通过vnode创建新的dom树\r\n    let elm = oldVNode; //获取真实元素\r\n    let parentNode = elm.parentNode; //拿到父元素\r\n    let newElm = createElm(newVNode); //通过虚拟节点创建真实节点\r\n\r\n    parentNode.insertBefore(newElm, elm.nextSibling); //将真是节点插入到页面中\r\n    parentNode.removeChild(elm); //删除原来的节点\r\n\r\n    return newElm; //返回新的真实dom节点\r\n  } else {\r\n    //这里则是两个虚拟节点  之间的比较   diff算法实现的地方\r\n    //1.两个节点不是同一个节点    则直接删除原来节点 换上新的节点\r\n    //2.两个虚拟节点是同一个节点   tag相同  key相同 再比较节点上的属性的差异 复用老的节点将差异属性更新\r\n    if (!isSameNode(oldVNode, newVNode)) {\r\n      //如果不是同一个节点  直接删除旧节点 创建新节点\r\n      let el = createElm(newVNode);\r\n      oldVNode.el.parentNode.replaceChild(el, oldVNode.el);\r\n      return el;\r\n    } else {\r\n      //比较两个一样的虚拟节点\r\n      return patchVnode(oldVNode, newVNode); //返回比对完毕的真是DOM节点\r\n    }\r\n  }\r\n}\r\n\r\nfunction isSameNode(oldVNode, newVNode) {\r\n  return oldVNode.tag == newVNode.tag && oldVNode.key == newVNode.key;\r\n}\r\n\r\nfunction patchVnode(oldVNode, newVNode) {\r\n  //这里就是对相同的虚拟节点进行比较\r\n  let el = (newVNode.el = oldVNode.el); //复用旧节点  赋值给新节点\r\n\r\n  if (!el.tag) {\r\n    //判断是否是文本节点   文本内容 就判断一下文本内容是否一致\r\n    if (oldVNode.text != newVNode.text) {\r\n      //如果新的虚拟文本节点中的内容和旧的不一样  就把text内容覆盖掉\r\n      el.textContent = newVNode.text;\r\n    }\r\n  }\r\n\r\n  //是元素节点  先要比元素上的属性\r\n  patchProps(el, oldVNode.data, newVNode.data);\r\n\r\n  //开始比较两个虚拟节点上的儿子\r\n  let oldChildren = oldVNode.children ? oldVNode.children : [];\r\n  let newChildren = newVNode.children ? newVNode.children : [];\r\n\r\n  if (oldChildren.length > 0 && newChildren.length > 0) {\r\n    //两个都有儿子节点  走diff算法\r\n    updateChildren(el, oldChildren, newChildren);\r\n  } else if (newChildren.length > 0) {\r\n    mountChildren(el, newChildren); //老的虚拟节点中没有儿子  新的虚拟节点中有儿子\r\n  } else if (oldChildren.length > 0) {\r\n    //将新的虚拟节点中的儿子创建出来并挂载到DOM中\r\n    // unmountedChildren(el)  循环删除节点\r\n    el.innerHTML = \"\"; //直接清空  不能这么做\r\n  }\r\n\r\n  return el;\r\n}\r\n\r\n//diff算法的核心地方     对两方的儿子进行比较\r\nfunction updateChildren(el, oldChildren, newChildren) {\r\n  //利用双指针算法\r\n  let oldStartIndex = 0;\r\n  let oldEndIndex = oldChildren.length - 1;\r\n  let newStartIndex = 0;\r\n  let newEndIndex = newChildren.length - 1;\r\n\r\n  let oldStartVnode = oldChildren[0];\r\n  let newStartVnode = newChildren[0];\r\n  let oldEndVnode = oldChildren[oldEndIndex];\r\n  let newEndVnode = newChildren[newEndIndex];\r\n\r\n  //通过老节点 创建映射表\r\n  function makeIndexByKey(arr) {\r\n    let map = {};\r\n    arr.forEach((child, index) => {\r\n      map[child.key] = index; //制作索引表 通过key\r\n    });\r\n    return map;\r\n  }\r\n  let map = makeIndexByKey(oldChildren);\r\n  //从头开始  双方的头指针向后移动 为指针向头移动   双方都需要满足这个条件\r\n  while (oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex) {\r\n    if (!oldStartVnode) {\r\n      continue\r\n    } else if (!oldEndVnode) {\r\n      continue;\r\n    } else if (isSameNode(oldStartVnode, newStartVnode)) {\r\n      //如果第一个节点是相同节点 则递归比较子节点 从头开始\r\n      patchVnode(oldStartVnode, newStartVnode);\r\n      oldStartVnode = oldChildren[++oldStartIndex];\r\n      newStartVnode = newChildren[++newStartIndex];\r\n    } else if (isSameNode(oldEndVnode, newEndVnode)) {\r\n      //从尾巴开始 如果尾巴节点相同  就从尾巴向头部移动\r\n      patchVnode(oldEndVnode, newEndVnode);\r\n      oldEndVnode = oldChildren[--oldEndIndex];\r\n      newEndVnode = newChildren[--newEndIndex];\r\n    } else if (isSameNode(oldStartVnode, newStartVnode)) {\r\n      //头尾对比  数组是否颠倒\r\n      patchVnode(oldStartVnode, newStartVnode);\r\n      el.insertBefore(oldStartVnode.el, oldEndVnode.nextSibling);\r\n      oldStartVnode = oldChildren[++oldStartIndex];\r\n      newEndVnode = newChildren[--newEndIndex];\r\n    } else if (isSameNode(oldEndVnode, newStartVnode)) {\r\n      //尾头对比\r\n      patchVnode(oldEndVnode, newStartVnode);\r\n      el.insertBefore(oldEndVnode.el, oldStartVnode.el);\r\n      oldEndVnode = oldChildren[--oldEndIndex];\r\n      newStartVnode = newChildren[++newStartIndex];\r\n\r\n      //乱序比对 根据旧的节点创建映射表  用新的节点去匹配\r\n      //找不到就插入头部 找到就移动位置  多余的删除\r\n    } else {\r\n      let moveIndex = map[newStartVnode.key];\r\n      if (moveIndex != undefined) {\r\n        //如果找到了老的节点\r\n        let moveVNode = newChildren[moveIndex]; //拿到老的虚拟节点   进行复用\r\n        el.insertBefore(moveVNode.el, oldStartVnode.el); //将该老的节点插入到头部\r\n        oldChildren[moveIndex] = undefined; //表示这个节点已经挪走了\r\n        patchVnode(moveVNode, newStartVnode);\r\n      } else {\r\n        //如果没有找到老的节点  就直接将新的虚拟节点创建为真实节点并插入到头部中\r\n        let newChild = createElm(newStartVnode);\r\n        el.insertBefore(newChild, oldStartVnode.el);\r\n      }\r\n      newStartVnode = newChildren[++newStartIndex]; //将新的children的头部指针往后移动\r\n    }\r\n  }\r\n  //新的儿子节点数量比老的多   将新的儿子节点插入到dom上 要处理是插到之前 还是之后\r\n  if (newStartIndex <= newEndIndex) {\r\n    for (let i = newStartIndex; i <= newEndIndex; i++) {\r\n      let childEl = createElm(newChildren[i]);\r\n\r\n      //处理是插入到尾巴 还是插入到头部\r\n      let anchor = newChildren[newEndIndex + 1]\r\n        ? newChildren[newEndIndex + 1].el\r\n        : null;\r\n      //若anchor为空   则是向后追加\r\n      el.insertBefore(childEl, anchor);\r\n    }\r\n  }\r\n  //老的子节点多了 就要删除老的上面的节点\r\n  if (oldStartIndex <= oldEndIndex) {\r\n    for (let i = oldStartIndex; i <= oldEndIndex; i++) {\r\n      if (oldChildren[i]) { //空节点不处理   只有有内容的节点 才处理\r\n        let childEl = oldChildren[i].el;\r\n        el.removeChild(childEl);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction mountChildren(el, newChildren) {\r\n  //将新的虚拟节点中的儿子都挂载到真是DOM上\r\n  for (let i = 0; i < newChildren.length; i++) {\r\n    let child = newChildren[i];\r\n    el.appendChild(createElm(child));\r\n  }\r\n}\r\n\r\nexport function initLifeCycle(Vue) {\r\n  Vue.prototype._render = function () {\r\n    //当渲染的时候会去实例取值 我们就可以将数据和视图绑定\r\n    return this.$options.render.call(this);\r\n  };\r\n  Vue.prototype._update = function (vnode) {   //核心所在   update方法\r\n    //patch方法 既有初始化的功能 也有更新的功能\r\n    const vm = this;\r\n    const el = vm.$el;\r\n    // vm.$el = patch(el, vnode); //将新的dom节点挂载到实例的$el属性上\r\n   \r\n\r\n    const preVnode = vm._vnode   //第一次渲染的时候没有vm._vnode\r\n    vm._vnode = vnode    //将该虚拟节点保存在实例上  \r\n\r\n    if(preVnode){  //如果存在虚拟node 说明之前已经渲染过了  \r\n      vm.$el = patch(preVnode,vnode)\r\n    }else{\r\n      vm.$el = patch(el,vnode)\r\n    }\r\n  };\r\n  Vue.prototype._c = function () {\r\n    return createElementVNode(this, ...arguments);\r\n  };\r\n  Vue.prototype._v = function () {\r\n    return createTextVNode(this, ...arguments);\r\n  };\r\n  Vue.prototype._s = function (value) {\r\n    if (typeof value == \"object\") return JSON.stringify(value);\r\n    return value;\r\n  };\r\n}\r\n","const strategy = {};\r\nconst LIFECYCLE = [\r\n  \"beforeCreate\",\r\n  \"created\",\r\n  \"beforeMount\",\r\n  \"mounted\",\r\n  \"beforeUpdate\",\r\n  \"updated\",\r\n  \"beforeDestroy\",\r\n  \"destroyed\",\r\n];\r\n\r\nLIFECYCLE.forEach((hook) => {\r\n  strategy[hook] = function (p, c) {\r\n    if (c) {\r\n      //如果儿子有\r\n      if (p) {\r\n        //如果儿子有  父亲也有\r\n        return p.concat(c);\r\n      } else {\r\n        //如果儿子有 父亲没有 将儿子包装成数组\r\n        return [c];\r\n      }\r\n    } else {\r\n      //如果儿子没有  直接返回父亲\r\n      return p;\r\n    }\r\n  };\r\n});\r\n\r\n\r\n//处理组件中有components属性的情况  合并component\r\n//构建链式关系  自己当前找不到 可以沿着链找到 \r\nstrategy.components = function(parentVal,childVal){  \r\n  const res = Object.create(parentVal)\r\n\r\n  if(childVal){\r\n    for(let key in childVal){\r\n      res[key] = childVal[key]\r\n    }\r\n  }\r\n  \r\n  return res\r\n}\r\n\r\n\r\n\r\n//合并options的功能\r\nexport function mergeOptions(parent, child) {\r\n  const options = {}; //定义一个空options\r\n\r\n  function mergeField(key) {\r\n    //合并key值\r\n    if (strategy[key]) {\r\n      options[key] = strategy[key](parent[key], child[key]);\r\n    } else {\r\n      //如果不在策略中  以儿子为主\r\n      options[key] = child[key] || parent[key];\r\n    }\r\n  }\r\n  for (let key in parent) {\r\n    //遍历父亲中的key\r\n    mergeField(key); //将父亲和儿子都有的进行合并\r\n  }\r\n  for (let key in child) {\r\n    //遍历儿子\r\n    if (!parent.hasOwnProperty(key)) {\r\n      //如果父亲上没有儿子的这个属性\r\n      mergeField(key); //将儿子的这个属性合并\r\n    }\r\n  }\r\n\r\n  return options; //返回合并后的options\r\n}\r\n\r\nexport function callHook(vm, hook) {\r\n  const handler = vm.$options[hook];\r\n  if (handler) {\r\n    handler.forEach((hook) => hook.call(vm));\r\n  }\r\n}\r\n","import { initState } from \"./state\";\r\nimport { compileToFunction } from \"./compiler/index\";\r\nimport { mountComponent } from \"./lifecycle\";\r\nimport { callHook, mergeOptions } from \"./utils\";\r\n\r\n\r\nexport function initMixin(Vue) {\r\n  Vue.prototype._init = function (options) {\r\n    const vm = this; //保留一下this\r\n\r\n    //我们使用vue的时候  $nextTick   $data等等   表明是实例的变量\r\n    vm.$options = mergeOptions(this.constructor.options, options);\r\n\r\n    //初始化状态\r\n    callHook(vm, \"beforeCreate\");   //钩子函数\r\n    initState(vm);   //初始化状态\r\n    callHook(vm, \"created\");\r\n\r\n    if (options.el) {\r\n      vm.$mount(options.el);\r\n    }\r\n \r\n  };//挂载$mount方法到原型上\r\n  Vue.prototype.$mount = function (el) {\r\n    const vm = this;\r\n    if(el){\r\n      el = document.querySelector(el);\r\n    }\r\n    let ops = vm.$options;\r\n\r\n    if (!ops.render) {\r\n      //查看用户有没有写render函数\r\n      let template;\r\n      if (!ops.template && el) {\r\n        //没有模板  但是有el  template就直接为el\r\n        template = el.outerHTML;\r\n      } else {\r\n        if (ops.template) {\r\n          //有模板  就直接用模板\r\n          template = ops.template;\r\n        }\r\n      }\r\n      //有了模板之后  对模板进行编译\r\n      if (template) {\r\n        const render = compileToFunction(template); //对模板进行编译  得到render函数\r\n        ops.render = render; //将render函数绑定到ops上\r\n      }\r\n    }\r\n    \r\n    mountComponent(vm, el); // 挂载组件\r\n  };\r\n}\r\n","import { mergeOptions } from \"./utils\";\r\n\r\nexport function initGlobalAPI(Vue) {\r\n  //实现核心功能mixin\r\n  Vue.options = {\r\n    _base:Vue\r\n  };\r\n  Vue.mixin = function (mixin) {\r\n    this.options = mergeOptions(this.options, mixin);\r\n    return this;\r\n  };\r\n\r\n  //实现extend方法  返回一个子类的构造方法\r\n  Vue.extend = function (options) {\r\n    function Sub(options = {}) {\r\n      this._init(options);\r\n    }                               //面向切片编程  AOP\r\n    Sub.prototype = Object.create(Vue.prototype); //将sub的原型对象变为Vue的prototype\r\n    Sub.prototype.constructor = Sub;   //再将原型对象的构造函数变为Sub\r\n    Sub.options = mergeOptions(Vue.options,options); //需要将用户传入的options与全局options进行合并\r\n    return Sub;\r\n  };\r\n\r\n  Vue.options.components = {}   //维护一个全局的components\r\n  Vue.component =function(name,definition){   //实现component功能\r\n    definition = typeof definition == \"function\"?definition:Vue.extend(definition)\r\n    Vue.options.components[name] = definition\r\n  }\r\n}\r\n\r\n\r\n","\r\nimport { initMixin } from \"./init\";\r\nimport { initGlobalAPI } from \"./initGlobalAPI\";\r\nimport { initLifeCycle} from \"./lifecycle\";\r\n\r\nimport { initStateMixin } from \"./state\";\r\n\r\nfunction Vue(options) {\r\n  this._init(options); //初始化 状态\r\n}\r\n\r\ninitMixin(Vue); //初始化状态 合并options  初始化data computed watch  挂载$mount函数到原型上\r\ninitLifeCycle(Vue); //初始化render和update函数  挂载到原型上\r\ninitGlobalAPI(Vue); //初始化minxin\r\ninitStateMixin(Vue); //初始化异步更新机制  $nextTick  和$watch方法\r\n\r\n\r\nexport default Vue;\r\n"],"names":["id","Dep","subs","target","addDep","watcher","push","forEach","update","globalWatcher","pushWatcher","popWatcher","pop","length","Watcher","vm","exectuor","options","cb","getter","renderWatcher","deps","depsId","Set","user","undefined","lazy","dirty","value","get","i","add","call","dep","has","addSub","queueWatcher","oldValue","newValue","queue","pending","nextTick","flushScheduleQueue","flushqueue","slice","clear","run","callbacks","waiting","Promise","resolve","then","flushCallBacks","calls","initComputed","computed","$options","watchers","_computedWatchers","key","userDef","defineComputed","setter","set","Object","defineProperty","createComputedValue","evaluate","depend","initMethods","methods","createMethod","console","log","bind","oldArrayProto","Array","prototype","newArrayProto","create","method","args","result","inserted","ob","__ob__","observeArray","notify","Observe","data","enumerable","isArray","__proto__","walk","keys","k","defineReactive","observe","arrayDep","v","current","childOb","initState","opts","initData","watch","initWatch","handler","createWatcher","hanlder","$watch","_data","proxy","initStateMixin","Vue","$nextTick","expreOrFn","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","creatASTElement","tag","attrs","type","children","parent","start","node","chars","text","replace","end","parseStart","match","advance","attr","name","n","substring","text_end","indexOf","startTagMatch","endTagMatch","genProps","str","obj","split","item","JSON","stringify","defaultTagRE","gen","codegen","lastIndex","test","res","startindex","endindex","exec","index","join","genChildren","map","child","ast","code","compileToFunction","template","render","Function","createElementVNode","component","Ctor","components","createComponentVnode","vnode","_base","extend","hook","init","instance","componentInstance","componentOptions","$mount","createTextVNode","mountComponent","el","$el","updateComponent","_update","_render","patchProps","oldProps","newProps","oldStyles","style","newStyles","removeAttribute","stylename","setAttribute","createComponent","createElm","document","createElement","appendChild","createTextNode","patch","oldVNode","newVNode","isRealEle","nodeType","elm","parentNode","newElm","insertBefore","nextSibling","removeChild","isSameNode","replaceChild","patchVnode","textContent","oldChildren","newChildren","updateChildren","mountChildren","innerHTML","oldStartIndex","oldEndIndex","newStartIndex","newEndIndex","oldStartVnode","newStartVnode","oldEndVnode","newEndVnode","makeIndexByKey","arr","moveIndex","moveVNode","newChild","childEl","anchor","initLifeCycle","preVnode","_vnode","_c","arguments","_v","_s","strategy","LIFECYCLE","p","c","concat","parentVal","childVal","mergeOptions","mergeField","hasOwnProperty","callHook","initMixin","_init","constructor","querySelector","ops","outerHTML","initGlobalAPI","mixin","Sub","definition"],"mappings":"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"}